apiVersion: v1
kind: Service
metadata:
  name: nfs-server
  namespace: {{ .Values.namespace.server }}
spec:
  ports:
    - port: 2049
      name: nfs
    - name: mountd
      port: 20048
    - name: rpcbind
      port: 111
  selector:
    app: nfs-server

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: nfs-server-conf
  namespace: {{ .Values.namespace.server }}
data:
  share : |-
    /exports *(rw,fsid=0,insecure,no_root_squash)

---

# apiVersion: v1
# kind: PersistentVolume
# metadata:
#   name: nfs-data-pv
#   labels:
#     name: nfs-pv
# spec:
#   storageClassName: "nfs-data-storageclass"
#   capacity:
#     storage: 100Gi
#   accessModes:
#     - ReadWriteOnce
#   gcePersistentDisk:
#     pdName: "nfs-data-disk"
#     fsType: "ext4"

---

# kind: PersistentVolumeClaim
# apiVersion: v1
# metadata:
#   name: nfs-data-pvc
# spec:
#   storageClassName: "nfs-data-storageclass"
#   accessModes:
#     - ReadWriteOnce
#   resources:
#     requests:
#       storage: 100Gi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: nfs-server
  namespace: {{ .Values.namespace.server }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nfs-server
  template:
    metadata:
      labels:
        app: nfs-server
    spec:
      terminationGracePeriodSeconds: 60
      containers:
        - name: nfs-server
          #image: k8s.gcr.io/volume-nfs:0.8
          image: alphayax/docker-volume-nfs:latest
          # give server pods time to release PVCs before nfs-server is stopped
          lifecycle:
            preStop:
              exec:
                command: ["/bin/sh", "-c", "sleep 30"]
          ports:
          - name: nfs
            containerPort: 2049
          - name: mountd
            containerPort: 20048
          - name: rpcbind
            containerPort: 111
          securityContext:
            privileged: true
          args:
            - /exports
          volumeMounts:
          # - name: nfs-data-pvc
          #   mountPath: /exports
          - name: nfs-server-conf
            mountPath: /etc/exports.d/

      volumes:
      # - name: nfs-data-pvc
      #   persistentVolumeClaim:
      #     claimName: nfs-data-pvc
      - name: nfs-server-conf
        configMap:
          name: nfs-server-conf