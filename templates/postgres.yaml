apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: {{ .Values.namespace.server }}
spec:
  ports:
    - port: 5432
  selector:
    app: postgres
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: {{ .Values.namespace.server }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      terminationGracePeriodSeconds: 50
      containers:
        - name: postgres
          image: postgres:16
          # give server pods time to close connections
          lifecycle:
            preStop:
              exec:
                command: ["/bin/sh", "-c", "sleep 20"]
          env:
            - name: POSTGRES_DB
              value: {{ .Values.postgres.db }}
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  key: username
                  name: {{ .Release.Name }}-pgauth
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: {{ .Release.Name }}-pgauth
          ports:
            - containerPort: 5432
          volumeMounts:
            - name: postgres-data
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: postgres-data
          emptyDir: {}